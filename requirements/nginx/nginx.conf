# Charger le module ModSecurity
load_module /etc/nginx/modules/ngx_http_modsecurity_module.so;

user www-data;
worker_processes auto;
pid /var/run/nginx.pid;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Inclusion des types MIME
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Paramètres globaux
    gzip on;
    gzip_types text/plain text/css application/json application/javascript application/xml text/xml;

    client_body_timeout 10s;
    client_header_timeout 10s;
    send_timeout 10s;
    keepalive_timeout 15s;

    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;
    limit_req_zone $binary_remote_addr zone=req_limit:10m rate=10r/s;

    server_tokens off;
    client_body_buffer_size 10M;
    client_max_body_size 12M;

    # Activer ModSecurity
    modsecurity on;
    modsecurity_rules_file /etc/nginx/modsec/main.conf;

    # Format des logs en JSON
    log_format json_combined escape=json
        '{"time_local":"$time_local","remote_addr":"$remote_addr","remote_user":"$remote_user","body_bytes_sent":"$body_bytes_sent","request_time":"$request_time","request":"$request","status":"$status","http_referer":"$http_referer","http_user_agent":"$http_user_agent","http_x_forwarded_for":"$proxy_add_x_forwarded_for","server_name":"$server_name"}';

    access_log /dev/stdout json_combined;
    error_log /dev/stderr warn;

    # --- Bloc HTTP sur le port 80 : redirection vers HTTPS sur le port 3000 ---
    server {
        listen 80;
        server_name localhost;

        # Redirection HTTP vers HTTPS en précisant le port 3000
        return 301 https://$host$request_uri;
    }

    # --- Bloc HTTPS ---
    server {
        listen 443 ssl default_server;
        server_name localhost;

        # Chemins vers le certificat et la clé SSL
        ssl_certificate     /etc/nginx/ssl/selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/selfsigned.key;

        # Paramètres SSL
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:CHACHA20:!MD5:!DES:!3DES:!RC4";
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # En-têtes de sécurité
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Mise à jour de la CSP pour autoriser Google Fonts
        add_header Content-Security-Policy "default-src 'self'; 
            script-src 'self' https://unpkg.com https://cdn.jsdelivr.net 'unsafe-inline'; 
            style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://fonts.googleapis.com; 
            font-src 'self' https://fonts.gstatic.com; 
            object-src 'none'; 
            img-src 'self' data:; 
            connect-src 'self'; 
            frame-ancestors 'none'; 
            base-uri 'self'; 
            form-action 'self';" always;

        # Bloquer l'accès aux fichiers cachés
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Frontend statique
        location / {
            root /usr/share/nginx/html;
            access_log off;
            index index.html;
            try_files $uri $uri/ =404;
        }

        # Reverse proxy vers le backend
        location /api/ {
            limit_conn conn_limit 10;
            limit_req zone=req_limit burst=5 nodelay;
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
